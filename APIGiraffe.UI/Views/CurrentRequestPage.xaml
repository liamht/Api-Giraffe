<UserControl x:Class="APIGiraffe.UI.Views.CurrentRequestPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:APIGiraffe.UI.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:designTimeViewModels="clr-namespace:APIGiraffe.UI.DesignTimeViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="900"
             Background="{DynamicResource MaterialDesignBackground}"
             Foreground="{DynamicResource MaterialDesignBody}"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
             d:DataContext="{d:DesignInstance Type= designTimeViewModels:CurrentRequestViewModel , IsDesignTimeCreatable=True}"
             >

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <local:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="UrlHeaderRow" Height="25px"></RowDefinition>
            <RowDefinition x:Name="UrlRow" Height="50px"></RowDefinition>
            <RowDefinition x:Name="ParameterHeaderRow" Height="25px"></RowDefinition>
            <RowDefinition x:Name="ParameterRow" Height="auto"></RowDefinition>
            <RowDefinition x:Name="BodyHeaderRow" Height="25px"></RowDefinition>
            <RowDefinition x:Name="BodyRow" Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" FontSize="16" HorizontalAlignment="Left">Url</TextBlock>


          
            <Grid Grid.Row="1" HorizontalAlignment="Stretch" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"></ColumnDefinition>
                    <ColumnDefinition Width="4*"></ColumnDefinition>
                </Grid.ColumnDefinitions>  
                
                <materialDesign:PackIcon Margin="5" VerticalAlignment="Center" Grid.Column="0" Kind="Web" Foreground="{Binding ElementName=UrlTextBox, Path=BorderBrush}" />

                <TextBox Grid.Column="0" x:Name="UrlTextBox" HorizontalAlignment="Stretch" Height="30" MinWidth="300"   Margin="35 0" 
                         materialDesign:HintAssist.Hint="Url" VerticalContentAlignment="Center" Text="{Binding Url, Mode=TwoWay}" ></TextBox>

                <Button Grid.Column="1" VerticalAlignment="Center" Background="{StaticResource 'Button Color'}" HorizontalAlignment="Right" Margin="0 0 50 0" Command="{Binding GetResponseCommand}">Send Request</Button>

            </Grid>

        <TextBlock Grid.Row="2" FontSize="16">Headers</TextBlock>
        <StackPanel Grid.Row="3" Margin="50 0" MaxHeight="125">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" HorizontalAlignment="Center" FontWeight="Bold" Text="Name" />
                <TextBlock Grid.Column="1" HorizontalAlignment="Center" FontWeight="Bold">Value</TextBlock>
            </Grid>
            <ListView ItemsSource="{Binding RequestHeaders}" DataContext="{Binding}" HorizontalAlignment="Stretch">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border Tag="{Binding Path=Name, ElementName=RootElement}">
                            <Grid HorizontalAlignment="Stretch" Margin="0">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem   Margin="0"
                                                    Header="Edit Header"
                                                    Command="{Binding Source={StaticResource DataContextProxy}, Path=Data.EditHeaderCommand}"
                                                    CommandParameter="{Binding Id}"/>

                                        <MenuItem   Margin="0"
                                                    Header="Delete Header"
                                                    Command="{Binding Source={StaticResource DataContextProxy}, Path=Data.DeleteHeaderCommand}"
                                                    CommandParameter="{Binding Id}"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" HorizontalAlignment="Center" Text="{Binding Name}" />
                                <TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="{Binding Value}"></TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <Button Width="150" HorizontalAlignment="Right" Margin="0 15 0 0" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding AddHeaderCommand}">Add Header</Button>
        </StackPanel>


        <TextBlock Grid.Row="4" FontSize="16">Response</TextBlock>

        <Grid Grid.Row="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <TextBox 
                 VerticalContentAlignment="Top" 
                 TextWrapping="Wrap" 
                 HorizontalAlignment="Stretch"
                 Padding="15 0 15 15"
                 AcceptsReturn="True"
                 IsReadOnly="True"
                 VerticalScrollBarVisibility="Visible"
                 materialDesign:HintAssist.Hint="The response from the server will show here when a request is sent."
                 Text="{Binding Response}"
                 MaxHeight="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=Height}"
                 >
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>
        <TextBox Grid.Row="5" 
                 VerticalContentAlignment="Top" 
                 VerticalAlignment="Stretch" 
                 TextWrapping="Wrap" 
                 HorizontalAlignment="Stretch"
                 Padding="15 0 15 15"
                 AcceptsReturn="True"
                 IsReadOnly="True"
                 VerticalScrollBarVisibility="Visible"
                 materialDesign:HintAssist.Hint="The response from the server will show here when a request is sent."
                 Text="{Binding Response}"
                 >
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                </Style>
            </TextBox.Style>
        </TextBox>

        <StackPanel Visibility="{Binding IsRequestLoading, Converter={StaticResource BoolToVis}}" Grid.Row="5" Orientation="Horizontal" Height="100px" Margin="0 15 0 0" Width="300" VerticalAlignment="Top">
            <ProgressBar VerticalAlignment="Top" Foreground="{StaticResource 'Button Color'}" Margin="5" Style="{DynamicResource MaterialDesignCircularProgressBar}" HorizontalAlignment="Center" IsIndeterminate="True" Value="0" />
            <TextBlock VerticalAlignment="Top" Margin="10 8 0 0">Fetching your data from the server, please wait.</TextBlock>
        </StackPanel>



    </Grid>
</UserControl>
